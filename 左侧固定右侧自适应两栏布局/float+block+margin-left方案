.wrapper-float {
    overflow: hidden;		// 清除浮动
}

.wrapper-float .left {
    float: left;
}

.wrapper-float .right {
    margin-left: 150px;
}
/*
上面两种方案都是利用了CSS的calc()函数来计算宽度值。下面两种方案则是利用了block级别的元素盒子的宽度具有填满父容器，
并随着父容器的宽度自适应的流动特性。 但是block级别的元素都是独占一行的，所以要想办法让两个block排列到一起。 
我们知道，block级别的元素会认为浮动的元素不存在，但是inline级别的元素能识别到浮动的元素。
这样，block级别的元素就可以和浮动的元素同处一行了。 为了让右侧盒子和左侧盒子保持距离，需要为左侧盒子留出足够的距离。
这个距离的大小为左侧盒子的宽度以及两个盒子之间的距离之和。然后将该值设置为右侧盒子的margin-left。 缺点：

需要清除浮动
需要计算右侧盒子的margin-left
*/